openapi: "3.0.3"
info:
  title: Pizzeria API
  description: Documentation de l'API pour la gestion de pizzas, ingrédients, comptes, commandes, commentaires et authentification.
  version: "1.0.0"
servers:
  - url: http://localhost:8080/api
paths:
  /pizzas:
    get:
      summary: Récupérer toutes les pizzas
      responses:
        '200':
          description: Liste des PizzaDto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PizzaDto'
    post:
      summary: Créer une nouvelle pizza
      requestBody:
        description: Objet PizzaRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaRequestDto'
      responses:
        '200':
          description: Pizza créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaDto'
  /pizzas/{id}:
    get:
      summary: Récupérer une pizza par son id
      parameters:
        - name: id
          in: path
          description: ID de la pizza
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Objet PizzaDto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaDto'
    delete:
      summary: Supprimer une pizza par son id
      parameters:
        - name: id
          in: path
          description: ID de la pizza à supprimer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Pizza supprimée
    put:
      summary: Mettre à jour une pizza par son id
      parameters:
        - name: id
          in: path
          description: ID de la pizza à mettre à jour
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Objet PizzaRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaRequestDto'
      responses:
        '200':
          description: Pizza mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaDto'
  /ingredients:
    get:
      summary: Récupérer tous les ingrédients
      responses:
        '200':
          description: Liste des IngredientDto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngredientDto'
    post:
      summary: Créer un nouvel ingrédient
      requestBody:
        description: Objet IngredientRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientRequestDto'
      responses:
        '200':
          description: Ingrédient créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientDto'
  /ingredients/{id}:
    get:
      summary: Récupérer un ingrédient par son id
      parameters:
        - name: id
          in: path
          description: ID de l'ingrédient
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Objet IngredientDto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientDto'
    delete:
      summary: Supprimer un ingrédient par son id
      parameters:
        - name: id
          in: path
          description: ID de l'ingrédient à supprimer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Ingrédient supprimé
    put:
      summary: Mettre à jour un ingrédient par son id
      parameters:
        - name: id
          in: path
          description: ID de l'ingrédient à mettre à jour
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Objet IngredientRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientRequestDto'
      responses:
        '200':
          description: Ingrédient mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientDto'
  /pizzas-paniers:
    get:
      summary: Récupérer tous les pizzas-paniers
      responses:
        '200':
          description: Liste des PizzaPanierDto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PizzaPanierDto'
    post:
      summary: Créer un nouveau pizza-panier
      requestBody:
        description: Objet PizzaPanierRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaPanierRequestDto'
      responses:
        '200':
          description: PizzaPanier créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaPanierDto'
  /pizzas-paniers/{id}:
    get:
      summary: Récupérer un pizza-panier par son id
      parameters:
        - name: id
          in: path
          description: ID du pizza-panier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Objet PizzaPanierDto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaPanierDto'
    delete:
      summary: Supprimer un pizza-panier par son id
      parameters:
        - name: id
          in: path
          description: ID du pizza-panier à supprimer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Pizza-panier supprimé
    put:
      summary: Mettre à jour un pizza-panier par son id
      parameters:
        - name: id
          in: path
          description: ID du pizza-panier à mettre à jour
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Objet PizzaPanierRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaPanierRequestDto'
      responses:
        '200':
          description: Pizza-panier mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaPanierDto'
  /comptes:
    get:
      summary: Récupérer tous les comptes
      responses:
        '200':
          description: Liste des CompteDto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompteDto'
    post:
      summary: Créer un nouveau compte
      requestBody:
        description: Objet CompteRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompteRequestDto'
      responses:
        '200':
          description: Compte créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompteDto'
  /comptes/{id}:
    get:
      summary: Récupérer un compte par son id
      parameters:
        - name: id
          in: path
          description: ID du compte (en string dans l'URL, converti en Long)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Objet CompteDto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompteDto'
    delete:
      summary: Supprimer un compte par son id
      parameters:
        - name: id
          in: path
          description: ID du compte à supprimer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Compte supprimé
    put:
      summary: Mettre à jour un compte par son id
      parameters:
        - name: id
          in: path
          description: ID du compte à mettre à jour
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Objet CompteRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompteRequestDto'
      responses:
        '200':
          description: Compte mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompteDto'
  /commandes:
    get:
      summary: Récupérer toutes les commandes
      responses:
        '200':
          description: Liste des CommandeDto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandeDto'
    post:
      summary: Créer une nouvelle commande
      requestBody:
        description: Objet CommandeRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandeRequestDto'
      responses:
        '200':
          description: Commande créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandeDto'
  /commandes/{id}:
    get:
      summary: Récupérer une commande par son id
      parameters:
        - name: id
          in: path
          description: ID de la commande
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Objet CommandeDto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandeDto'
    delete:
      summary: Supprimer une commande par son id
      parameters:
        - name: id
          in: path
          description: ID de la commande à supprimer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Commande supprimée
    put:
      summary: Mettre à jour une commande par son id
      parameters:
        - name: id
          in: path
          description: ID de la commande à mettre à jour
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Objet CommandeRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandeRequestDto'
      responses:
        '200':
          description: Commande mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandeDto'
  /commandes/{id}/commentaires:
    post:
      summary: Ajouter un commentaire à une commande
      parameters:
        - name: id
          in: path
          description: ID de la commande (string)
          required: true
          schema:
            type: string
      requestBody:
        description: Objet CommentaireRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentaireRequestDto'
      responses:
        '200':
          description: Commentaire ajouté
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentaireDto'
    get:
      summary: Récupérer les commentaires d'une commande
      parameters:
        - name: id
          in: path
          description: ID de la commande
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Liste des CommentaireDto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentaireDto'
  /commentaires:
    get:
      summary: Récupérer tous les commentaires
      responses:
        '200':
          description: Liste des CommentaireDto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentaireDto'
  /commentaires/{id}:
    get:
      summary: Récupérer un commentaire par son id
      parameters:
        - name: id
          in: path
          description: ID du commentaire
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Objet CommentaireDto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentaireDto'
    delete:
      summary: Supprimer un commentaire par son id
      parameters:
        - name: id
          in: path
          description: ID du commentaire à supprimer
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Commentaire supprimé
    put:
      summary: Mettre à jour un commentaire par son id
      parameters:
        - name: id
          in: path
          description: ID du commentaire à mettre à jour
          required: true
          schema:
            type: string
      requestBody:
        description: Objet CommentaireRequestDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentaireRequestDto'
      responses:
        '200':
          description: Commentaire mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentaireDto'
  /authentification:
    post:
      summary: Vérifier les identifiants de connexion
      requestBody:
        description: Objet AuthentificationDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthentificationDto'
      responses:
        '200':
          description: Résultat de la vérification (true/false)
          content:
            application/json:
              schema:
                type: boolean
components:
  schemas:
    PizzaPanierDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        pizza:
          $ref: '#/components/schemas/PizzaLightDto'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/IngredientDto'
      required:
        - id
        - pizza
        - ingredients
    PizzaPanierRequestDto:
      type: object
      properties:
        pizzaId:
          type: integer
          format: int64
        ingredientsIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - pizzaId
        - ingredientsIds
    PizzaLightDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        description:
          type: string
        photo:
          type: string
      required:
        - id
        - nom
        - description
        - photo
    PizzaDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        description:
          type: string
        photo:
          type: string
        standardIngredients:
          type: array
          items:
            $ref: '#/components/schemas/IngredientDto'
        optionalIngredients:
          type: array
          items:
            $ref: '#/components/schemas/IngredientDto'
      required:
        - id
        - nom
        - description
        - photo
        - standardIngredients
        - optionalIngredients
    PizzaRequestDto:
      type: object
      properties:
        nom:
          type: string
        description:
          type: string
        photo:
          type: string
        standardIngredientsIds:
          type: array
          items:
            type: integer
            format: int64
        optionalIngredientsIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - nom
        - description
        - photo
        - standardIngredientsIds
        - optionalIngredientsIds
    IngredientDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        description:
          type: string
        prix:
          type: number
          format: float
      required:
        - id
        - nom
        - description
        - prix
    IngredientRequestDto:
      type: object
      properties:
        nom:
          type: string
        description:
          type: string
        prix:
          type: number
          format: float
      required:
        - nom
        - description
        - prix
    CompteDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        pseudo:
          type: string
        prenom:
          type: string
        nom:
          type: string
      required:
        - id
        - pseudo
        - prenom
        - nom
    CompteRequestDto:
      type: object
      properties:
        pseudo:
          type: string
        prenom:
          type: string
        nom:
          type: string
        motDePasse:
          type: string
      required:
        - pseudo
        - prenom
        - nom
        - motDePasse
    CommandeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        compteId:
          type: integer
          format: int64
        panier:
          type: array
          items:
            $ref: '#/components/schemas/PizzaPanierDto'
        commentairesIds:
          type: array
          items:
            type: string
      required:
        - id
        - compteId
        - panier
        - commentairesIds
    CommandeRequestDto:
      type: object
      properties:
        compteId:
          type: integer
          format: int64
        panier:
          type: array
          items:
            $ref: '#/components/schemas/PizzaPanierDto'
        commentairesIds:
          type: array
          items:
            type: string
      required:
        - compteId
        - panier
        - commentairesIds
    CommentaireDto:
      type: object
      properties:
        id:
          type: string
        texte:
          type: string
        photo:
          type: string
      required:
        - id
        - texte
        - photo
    CommentaireRequestDto:
      type: object
      properties:
        texte:
          type: string
        photo:
          type: string
      required:
        - texte
        - photo
    AuthentificationDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
