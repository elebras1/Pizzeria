openapi: 3.0.0
info:
  title: Pizza API
  version: 1.0.0
paths:
  /pizzas:
    get:
      summary: Récupérer toutes les pizzas
      responses:
        '200':
          description: Liste des pizzas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PizzaDto'
    post:
      summary: Créer une nouvelle pizza
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaDto'
      responses:
        '201':
          description: Pizza créée

  /pizza/{id}:
    get:
      summary: Récupérer une pizza par ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la pizza
      responses:
        '200':
          description: Pizza trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaDto'
        '404':
          description: Pizza non trouvée
    put:
      summary: Mettre à jour une pizza existante
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la pizza
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaDto'
      responses:
        '200':
          description: Pizza mise à jour
    delete:
      summary: Supprimer une pizza
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la pizza
      responses:
        '204':
          description: Pizza supprimée

  /pizza/{id}/standard-ingredients:
    get:
      summary: Récupérer les ingrédients standards d'une pizza
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la pizza
      responses:
        '200':
          description: Liste des ingrédients standards
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngredientDto'

  /pizza/{id}/optional-ingredients:
    get:
      summary: Récupérer les ingrédients optionnels d'une pizza
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la pizza
      responses:
        '200':
          description: Liste des ingrédients optionnels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngredientDto'

  /ingredients:
    get:
      summary: Récupérer tous les ingrédients
      responses:
        '200':
          description: Liste des ingrédients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngredientDto'
    post:
      summary: Créer un nouvel ingrédient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientDto'
      responses:
        '201':
          description: Ingrédient créé

  /ingredients/{id}:
    get:
      summary: Récupérer un ingrédient par ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de l'ingrédient
      responses:
        '200':
          description: Ingrédient trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientDto'
        '404':
          description: Ingrédient non trouvé
    put:
      summary: Mettre à jour un ingrédient existant
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de l'ingrédient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngredientDto'
      responses:
        '200':
          description: Ingrédient mis à jour
    delete:
      summary: Supprimer un ingrédient
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de l'ingrédient
      responses:
        '204':
          description: Ingrédient supprimé

  /orders:
    get:
      summary: Récupérer toutes les commandes
      responses:
        '200':
          description: Liste des commandes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
    post:
      summary: Créer une nouvelle commande
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '201':
          description: Commande créée

  /orders/{id}:
    get:
      summary: Récupérer une commande par ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la commande
      responses:
        '200':
          description: Commande trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '404':
          description: Commande non trouvée
    put:
      summary: Mettre à jour une commande existante
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la commande
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: Commande mise à jour
    delete:
      summary: Supprimer une commande
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la commande
      responses:
        '204':
          description: Commande supprimée

  /orders/{id}/comments:
    get:
      summary: Récupérer les commentaires d'une commande
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la commande
      responses:
        '200':
          description: Liste des commentaires de la commande
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDto'
        '404':
          description: Commande non trouvée

  /accounts:
    get:
      summary: Récupérer tous les comptes
      responses:
        '200':
          description: Liste des comptes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDto'
    post:
      summary: Créer un nouveau compte
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
      responses:
        '201':
          description: Compte créé

  /accounts/{id}:
    get:
      summary: Récupérer un compte par ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du compte
      responses:
        '200':
          description: Compte trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        '404':
          description: Compte non trouvé
    put:
      summary: Mettre à jour un compte existant
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du compte
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
      responses:
        '200':
          description: Compte mis à jour
    delete:
      summary: Supprimer un compte
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du compte
      responses:
        '204':
          description: Compte supprimé

  /accounts/{id}/orders:
    get:
      summary: Récupérer les commandes d'un compte
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du compte
      responses:
        '200':
          description: Liste des commandes du compte
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
        '404':
          description: Compte non trouvé

  /carts:
    get:
      summary: Récupérer tous les paniers
      responses:
        '200':
          description: Liste des paniers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartDto'
    post:
      summary: Créer un nouveau panier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartDto'
      responses:
        '201':
          description: Panier créé

  /carts/{id}:
    get:
      summary: Récupérer un panier par ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du panier
      responses:
        '200':
          description: Panier trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDto'
        '404':
          description: Panier non trouvé
    put:
      summary: Mettre à jour un panier existant
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du panier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartDto'
      responses:
        '200':
          description: Panier mis à jour
    delete:
      summary: Supprimer un panier
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du panier
      responses:
        '204':
          description: Panier supprimé

  /pizza-carts:
    get:
      summary: Récupérer toutes les associations pizza/panier
      responses:
        '200':
          description: Liste des associations pizza/panier
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PizzaCartDto'
    post:
      summary: Ajouter une pizza à un panier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaCartDto'
      responses:
        '201':
          description: Association créée

  /pizza-carts/{id}:
    get:
      summary: Récupérer une association pizza/panier par ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de l'association
      responses:
        '200':
          description: Association trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaCartDto'
        '404':
          description: Association non trouvée
    put:
      summary: Mettre à jour une association pizza/panier
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de l'association
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaCartDto'
      responses:
        '200':
          description: Association mise à jour
    delete:
      summary: Supprimer une association pizza/panier
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de l'association
      responses:
        '204':
          description: Association supprimée

  /comments:
    get:
      summary: Récupérer tous les commentaires
      responses:
        '200':
          description: Liste des commentaires
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDto'
    post:
      summary: Créer un nouveau commentaire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
      responses:
        '201':
          description: Commentaire créé

  /comments/{id}:
    get:
      summary: Récupérer un commentaire par ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du commentaire
      responses:
        '200':
          description: Commentaire trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
        '404':
          description: Commentaire non trouvé
    put:
      summary: Mettre à jour un commentaire existant
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du commentaire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
      responses:
        '200':
          description: Commentaire mis à jour
    delete:
      summary: Supprimer un commentaire
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID du commentaire
      responses:
        '204':
          description: Commentaire supprimé

  # Optionnel : association des commentaires à une pizza
  /pizzas/{id}/comments:
    get:
      summary: Récupérer les commentaires d'une pizza
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la pizza
      responses:
        '200':
          description: Liste des commentaires pour la pizza
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDto'
    post:
      summary: Ajouter un commentaire à une pizza
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID de la pizza
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
      responses:
        '201':
          description: Commentaire ajouté à la pizza

components:
  schemas:
    PizzaDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        photo:
          type: string

    IngredientDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double

    PizzaCartDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idPizza:
          type: integer
          format: int64
        idsIngredients:
          type: array
          items:
            type: integer
            format: int64
        idCart:
          type: integer
          format: int64

    CartDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idOrder:
          type: integer
          format: int64
        idsPizzas:
          type: array
          items:
            type: integer
            format: int64

    OrderDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        idAccount:
          type: integer
          format: int64
        carts:
          type: array
          items:
            $ref: '#/components/schemas/CartDto'

    CommentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        photo:
          type: string
        idComment:
          type: integer
          format: int64

    AccountDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        pseudo:
          type: string
        password:
          type: string
        name:
          type: string
        firstname:
          type: string
        isAdmin:
          type: boolean
